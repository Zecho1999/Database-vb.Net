'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Database1")>  _
Partial Public Class DataClasses1DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Inserttbcrew__(instance As tbcrew__)
    End Sub
  Partial Private Sub Updatetbcrew__(instance As tbcrew__)
    End Sub
  Partial Private Sub Deletetbcrew__(instance As tbcrew__)
    End Sub
  Partial Private Sub Inserttbpenumpang(instance As tbpenumpang)
    End Sub
  Partial Private Sub Updatetbpenumpang(instance As tbpenumpang)
    End Sub
  Partial Private Sub Deletetbpenumpang(instance As tbpenumpang)
    End Sub
  Partial Private Sub Inserttbpo(instance As tbpo)
    End Sub
  Partial Private Sub Updatetbpo(instance As tbpo)
    End Sub
  Partial Private Sub Deletetbpo(instance As tbpo)
    End Sub
  Partial Private Sub Inserttbtrayek(instance As tbtrayek)
    End Sub
  Partial Private Sub Updatetbtrayek(instance As tbtrayek)
    End Sub
  Partial Private Sub Deletetbtrayek(instance As tbtrayek)
    End Sub
  Partial Private Sub Inserttbarmada(instance As tbarmada)
    End Sub
  Partial Private Sub Updatetbarmada(instance As tbarmada)
    End Sub
  Partial Private Sub Deletetbarmada(instance As tbarmada)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.Data_Terminal.My.MySettings.Default.Database1ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tbcrew__s() As System.Data.Linq.Table(Of tbcrew__)
		Get
			Return Me.GetTable(Of tbcrew__)
		End Get
	End Property
	
	Public ReadOnly Property tbpenumpangs() As System.Data.Linq.Table(Of tbpenumpang)
		Get
			Return Me.GetTable(Of tbpenumpang)
		End Get
	End Property
	
	Public ReadOnly Property tbpos() As System.Data.Linq.Table(Of tbpo)
		Get
			Return Me.GetTable(Of tbpo)
		End Get
	End Property
	
	Public ReadOnly Property tbtrayeks() As System.Data.Linq.Table(Of tbtrayek)
		Get
			Return Me.GetTable(Of tbtrayek)
		End Get
	End Property
	
	Public ReadOnly Property tbarmadas() As System.Data.Linq.Table(Of tbarmada)
		Get
			Return Me.GetTable(Of tbarmada)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[tbcrew"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"]")>  _
Partial Public Class tbcrew__
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _busid As String
	
	Private _crewid As String
	
	Private _crewsopir As String
	
	Private _crewkernet As String
	
	Private _id_trayek As String
	
	Private _tbarmada As EntityRef(Of tbarmada)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnbusidChanging(value As String)
    End Sub
    Partial Private Sub OnbusidChanged()
    End Sub
    Partial Private Sub OncrewidChanging(value As String)
    End Sub
    Partial Private Sub OncrewidChanged()
    End Sub
    Partial Private Sub OncrewsopirChanging(value As String)
    End Sub
    Partial Private Sub OncrewsopirChanged()
    End Sub
    Partial Private Sub OncrewkernetChanging(value As String)
    End Sub
    Partial Private Sub OncrewkernetChanged()
    End Sub
    Partial Private Sub Onid_trayekChanging(value As String)
    End Sub
    Partial Private Sub Onid_trayekChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tbarmada = CType(Nothing, EntityRef(Of tbarmada))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_busid", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property busid() As String
		Get
			Return Me._busid
		End Get
		Set
			If (String.Equals(Me._busid, value) = false) Then
				Me.OnbusidChanging(value)
				Me.SendPropertyChanging
				Me._busid = value
				Me.SendPropertyChanged("busid")
				Me.OnbusidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crewid", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property crewid() As String
		Get
			Return Me._crewid
		End Get
		Set
			If (String.Equals(Me._crewid, value) = false) Then
				If Me._tbarmada.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OncrewidChanging(value)
				Me.SendPropertyChanging
				Me._crewid = value
				Me.SendPropertyChanged("crewid")
				Me.OncrewidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crewsopir", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property crewsopir() As String
		Get
			Return Me._crewsopir
		End Get
		Set
			If (String.Equals(Me._crewsopir, value) = false) Then
				Me.OncrewsopirChanging(value)
				Me.SendPropertyChanging
				Me._crewsopir = value
				Me.SendPropertyChanged("crewsopir")
				Me.OncrewsopirChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crewkernet", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property crewkernet() As String
		Get
			Return Me._crewkernet
		End Get
		Set
			If (String.Equals(Me._crewkernet, value) = false) Then
				Me.OncrewkernetChanging(value)
				Me.SendPropertyChanging
				Me._crewkernet = value
				Me.SendPropertyChanged("crewkernet")
				Me.OncrewkernetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[id trayek]", Storage:="_id_trayek", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property id_trayek() As String
		Get
			Return Me._id_trayek
		End Get
		Set
			If (String.Equals(Me._id_trayek, value) = false) Then
				Me.Onid_trayekChanging(value)
				Me.SendPropertyChanging
				Me._id_trayek = value
				Me.SendPropertyChanged("id_trayek")
				Me.Onid_trayekChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tbarmada_tbcrew__", Storage:="_tbarmada", ThisKey:="crewid", OtherKey:="crewid", IsForeignKey:=true)>  _
	Public Property tbarmada() As tbarmada
		Get
			Return Me._tbarmada.Entity
		End Get
		Set
			Dim previousValue As tbarmada = Me._tbarmada.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tbarmada.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tbarmada.Entity = Nothing
					previousValue.tbcrew__s.Remove(Me)
				End If
				Me._tbarmada.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tbcrew__s.Add(Me)
					Me._crewid = value.crewid
				Else
					Me._crewid = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("tbarmada")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbpenumpang")>  _
Partial Public Class tbpenumpang
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Idpenumpang As String
	
	Private _nama As String
	
	Private _jenis As String
	
	Private _kelas As String
	
	Private _asal As String
	
	Private _tujuan As String
	
	Private _keberangkatan As String
	
	Private _kedatangan As String
	
	Private _tbarmada As EntityRef(Of tbarmada)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdpenumpangChanging(value As String)
    End Sub
    Partial Private Sub OnIdpenumpangChanged()
    End Sub
    Partial Private Sub OnnamaChanging(value As String)
    End Sub
    Partial Private Sub OnnamaChanged()
    End Sub
    Partial Private Sub OnjenisChanging(value As String)
    End Sub
    Partial Private Sub OnjenisChanged()
    End Sub
    Partial Private Sub OnkelasChanging(value As String)
    End Sub
    Partial Private Sub OnkelasChanged()
    End Sub
    Partial Private Sub OnasalChanging(value As String)
    End Sub
    Partial Private Sub OnasalChanged()
    End Sub
    Partial Private Sub OntujuanChanging(value As String)
    End Sub
    Partial Private Sub OntujuanChanged()
    End Sub
    Partial Private Sub OnkeberangkatanChanging(value As String)
    End Sub
    Partial Private Sub OnkeberangkatanChanged()
    End Sub
    Partial Private Sub OnkedatanganChanging(value As String)
    End Sub
    Partial Private Sub OnkedatanganChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tbarmada = CType(Nothing, EntityRef(Of tbarmada))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Idpenumpang", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Idpenumpang() As String
		Get
			Return Me._Idpenumpang
		End Get
		Set
			If (String.Equals(Me._Idpenumpang, value) = false) Then
				If Me._tbarmada.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdpenumpangChanging(value)
				Me.SendPropertyChanging
				Me._Idpenumpang = value
				Me.SendPropertyChanged("Idpenumpang")
				Me.OnIdpenumpangChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nama", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property nama() As String
		Get
			Return Me._nama
		End Get
		Set
			If (String.Equals(Me._nama, value) = false) Then
				Me.OnnamaChanging(value)
				Me.SendPropertyChanging
				Me._nama = value
				Me.SendPropertyChanged("nama")
				Me.OnnamaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jenis", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property jenis() As String
		Get
			Return Me._jenis
		End Get
		Set
			If (String.Equals(Me._jenis, value) = false) Then
				Me.OnjenisChanging(value)
				Me.SendPropertyChanging
				Me._jenis = value
				Me.SendPropertyChanged("jenis")
				Me.OnjenisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_kelas", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property kelas() As String
		Get
			Return Me._kelas
		End Get
		Set
			If (String.Equals(Me._kelas, value) = false) Then
				Me.OnkelasChanging(value)
				Me.SendPropertyChanging
				Me._kelas = value
				Me.SendPropertyChanged("kelas")
				Me.OnkelasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_asal", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property asal() As String
		Get
			Return Me._asal
		End Get
		Set
			If (String.Equals(Me._asal, value) = false) Then
				Me.OnasalChanging(value)
				Me.SendPropertyChanging
				Me._asal = value
				Me.SendPropertyChanged("asal")
				Me.OnasalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tujuan", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property tujuan() As String
		Get
			Return Me._tujuan
		End Get
		Set
			If (String.Equals(Me._tujuan, value) = false) Then
				Me.OntujuanChanging(value)
				Me.SendPropertyChanging
				Me._tujuan = value
				Me.SendPropertyChanged("tujuan")
				Me.OntujuanChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_keberangkatan", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property keberangkatan() As String
		Get
			Return Me._keberangkatan
		End Get
		Set
			If (String.Equals(Me._keberangkatan, value) = false) Then
				Me.OnkeberangkatanChanging(value)
				Me.SendPropertyChanging
				Me._keberangkatan = value
				Me.SendPropertyChanged("keberangkatan")
				Me.OnkeberangkatanChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_kedatangan", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property kedatangan() As String
		Get
			Return Me._kedatangan
		End Get
		Set
			If (String.Equals(Me._kedatangan, value) = false) Then
				Me.OnkedatanganChanging(value)
				Me.SendPropertyChanging
				Me._kedatangan = value
				Me.SendPropertyChanged("kedatangan")
				Me.OnkedatanganChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tbarmada_tbpenumpang", Storage:="_tbarmada", ThisKey:="Idpenumpang", OtherKey:="idpenumpang", IsForeignKey:=true)>  _
	Public Property tbarmada() As tbarmada
		Get
			Return Me._tbarmada.Entity
		End Get
		Set
			Dim previousValue As tbarmada = Me._tbarmada.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tbarmada.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tbarmada.Entity = Nothing
					previousValue.tbpenumpangs.Remove(Me)
				End If
				Me._tbarmada.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tbpenumpangs.Add(Me)
					Me._Idpenumpang = value.idpenumpang
				Else
					Me._Idpenumpang = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("tbarmada")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbpo")>  _
Partial Public Class tbpo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _poid As String
	
	Private _busid As String
	
	Private _crewid As String
	
	Private _poname As String
	
	Private _poaddress As String
	
	Private _jenis As String
	
	Private _jumlah As String
	
	Private _idtrayek As String
	
	Private _tbarmada As EntityRef(Of tbarmada)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnpoidChanging(value As String)
    End Sub
    Partial Private Sub OnpoidChanged()
    End Sub
    Partial Private Sub OnbusidChanging(value As String)
    End Sub
    Partial Private Sub OnbusidChanged()
    End Sub
    Partial Private Sub OncrewidChanging(value As String)
    End Sub
    Partial Private Sub OncrewidChanged()
    End Sub
    Partial Private Sub OnponameChanging(value As String)
    End Sub
    Partial Private Sub OnponameChanged()
    End Sub
    Partial Private Sub OnpoaddressChanging(value As String)
    End Sub
    Partial Private Sub OnpoaddressChanged()
    End Sub
    Partial Private Sub OnjenisChanging(value As String)
    End Sub
    Partial Private Sub OnjenisChanged()
    End Sub
    Partial Private Sub OnjumlahChanging(value As String)
    End Sub
    Partial Private Sub OnjumlahChanged()
    End Sub
    Partial Private Sub OnidtrayekChanging(value As String)
    End Sub
    Partial Private Sub OnidtrayekChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tbarmada = CType(Nothing, EntityRef(Of tbarmada))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_poid", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property poid() As String
		Get
			Return Me._poid
		End Get
		Set
			If (String.Equals(Me._poid, value) = false) Then
				If Me._tbarmada.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnpoidChanging(value)
				Me.SendPropertyChanging
				Me._poid = value
				Me.SendPropertyChanged("poid")
				Me.OnpoidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_busid", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property busid() As String
		Get
			Return Me._busid
		End Get
		Set
			If (String.Equals(Me._busid, value) = false) Then
				Me.OnbusidChanging(value)
				Me.SendPropertyChanging
				Me._busid = value
				Me.SendPropertyChanged("busid")
				Me.OnbusidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crewid", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property crewid() As String
		Get
			Return Me._crewid
		End Get
		Set
			If (String.Equals(Me._crewid, value) = false) Then
				Me.OncrewidChanging(value)
				Me.SendPropertyChanging
				Me._crewid = value
				Me.SendPropertyChanged("crewid")
				Me.OncrewidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_poname", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property poname() As String
		Get
			Return Me._poname
		End Get
		Set
			If (String.Equals(Me._poname, value) = false) Then
				Me.OnponameChanging(value)
				Me.SendPropertyChanging
				Me._poname = value
				Me.SendPropertyChanged("poname")
				Me.OnponameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_poaddress", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property poaddress() As String
		Get
			Return Me._poaddress
		End Get
		Set
			If (String.Equals(Me._poaddress, value) = false) Then
				Me.OnpoaddressChanging(value)
				Me.SendPropertyChanging
				Me._poaddress = value
				Me.SendPropertyChanged("poaddress")
				Me.OnpoaddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jenis", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property jenis() As String
		Get
			Return Me._jenis
		End Get
		Set
			If (String.Equals(Me._jenis, value) = false) Then
				Me.OnjenisChanging(value)
				Me.SendPropertyChanging
				Me._jenis = value
				Me.SendPropertyChanged("jenis")
				Me.OnjenisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jumlah", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property jumlah() As String
		Get
			Return Me._jumlah
		End Get
		Set
			If (String.Equals(Me._jumlah, value) = false) Then
				Me.OnjumlahChanging(value)
				Me.SendPropertyChanging
				Me._jumlah = value
				Me.SendPropertyChanged("jumlah")
				Me.OnjumlahChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idtrayek", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property idtrayek() As String
		Get
			Return Me._idtrayek
		End Get
		Set
			If (String.Equals(Me._idtrayek, value) = false) Then
				Me.OnidtrayekChanging(value)
				Me.SendPropertyChanging
				Me._idtrayek = value
				Me.SendPropertyChanged("idtrayek")
				Me.OnidtrayekChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tbarmada_tbpo", Storage:="_tbarmada", ThisKey:="poid", OtherKey:="poid", IsForeignKey:=true)>  _
	Public Property tbarmada() As tbarmada
		Get
			Return Me._tbarmada.Entity
		End Get
		Set
			Dim previousValue As tbarmada = Me._tbarmada.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tbarmada.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tbarmada.Entity = Nothing
					previousValue.tbpos.Remove(Me)
				End If
				Me._tbarmada.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tbpos.Add(Me)
					Me._poid = value.poid
				Else
					Me._poid = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("tbarmada")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbtrayek")>  _
Partial Public Class tbtrayek
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Idtrayek As String
	
	Private _busid As String
	
	Private _ponames As String
	
	Private _asal As String
	
	Private _dari As String
	
	Private _keberangkatan As String
	
	Private _kedatangan As String
	
	Private _tbarmada As EntityRef(Of tbarmada)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdtrayekChanging(value As String)
    End Sub
    Partial Private Sub OnIdtrayekChanged()
    End Sub
    Partial Private Sub OnbusidChanging(value As String)
    End Sub
    Partial Private Sub OnbusidChanged()
    End Sub
    Partial Private Sub OnponamesChanging(value As String)
    End Sub
    Partial Private Sub OnponamesChanged()
    End Sub
    Partial Private Sub OnasalChanging(value As String)
    End Sub
    Partial Private Sub OnasalChanged()
    End Sub
    Partial Private Sub OndariChanging(value As String)
    End Sub
    Partial Private Sub OndariChanged()
    End Sub
    Partial Private Sub OnkeberangkatanChanging(value As String)
    End Sub
    Partial Private Sub OnkeberangkatanChanged()
    End Sub
    Partial Private Sub OnkedatanganChanging(value As String)
    End Sub
    Partial Private Sub OnkedatanganChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tbarmada = CType(Nothing, EntityRef(Of tbarmada))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Idtrayek", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Idtrayek() As String
		Get
			Return Me._Idtrayek
		End Get
		Set
			If (String.Equals(Me._Idtrayek, value) = false) Then
				If Me._tbarmada.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdtrayekChanging(value)
				Me.SendPropertyChanging
				Me._Idtrayek = value
				Me.SendPropertyChanged("Idtrayek")
				Me.OnIdtrayekChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_busid", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property busid() As String
		Get
			Return Me._busid
		End Get
		Set
			If (String.Equals(Me._busid, value) = false) Then
				Me.OnbusidChanging(value)
				Me.SendPropertyChanging
				Me._busid = value
				Me.SendPropertyChanged("busid")
				Me.OnbusidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ponames", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ponames() As String
		Get
			Return Me._ponames
		End Get
		Set
			If (String.Equals(Me._ponames, value) = false) Then
				Me.OnponamesChanging(value)
				Me.SendPropertyChanging
				Me._ponames = value
				Me.SendPropertyChanged("ponames")
				Me.OnponamesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_asal", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property asal() As String
		Get
			Return Me._asal
		End Get
		Set
			If (String.Equals(Me._asal, value) = false) Then
				Me.OnasalChanging(value)
				Me.SendPropertyChanging
				Me._asal = value
				Me.SendPropertyChanged("asal")
				Me.OnasalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dari", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property dari() As String
		Get
			Return Me._dari
		End Get
		Set
			If (String.Equals(Me._dari, value) = false) Then
				Me.OndariChanging(value)
				Me.SendPropertyChanging
				Me._dari = value
				Me.SendPropertyChanged("dari")
				Me.OndariChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_keberangkatan", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property keberangkatan() As String
		Get
			Return Me._keberangkatan
		End Get
		Set
			If (String.Equals(Me._keberangkatan, value) = false) Then
				Me.OnkeberangkatanChanging(value)
				Me.SendPropertyChanging
				Me._keberangkatan = value
				Me.SendPropertyChanged("keberangkatan")
				Me.OnkeberangkatanChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_kedatangan", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property kedatangan() As String
		Get
			Return Me._kedatangan
		End Get
		Set
			If (String.Equals(Me._kedatangan, value) = false) Then
				Me.OnkedatanganChanging(value)
				Me.SendPropertyChanging
				Me._kedatangan = value
				Me.SendPropertyChanged("kedatangan")
				Me.OnkedatanganChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tbarmada_tbtrayek", Storage:="_tbarmada", ThisKey:="Idtrayek", OtherKey:="idtrayek", IsForeignKey:=true)>  _
	Public Property tbarmada() As tbarmada
		Get
			Return Me._tbarmada.Entity
		End Get
		Set
			Dim previousValue As tbarmada = Me._tbarmada.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tbarmada.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tbarmada.Entity = Nothing
					previousValue.tbtrayeks.Remove(Me)
				End If
				Me._tbarmada.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tbtrayeks.Add(Me)
					Me._Idtrayek = value.idtrayek
				Else
					Me._Idtrayek = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("tbarmada")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbarmada")>  _
Partial Public Class tbarmada
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _crewid As String
	
	Private _busid As String
	
	Private _poid As String
	
	Private _idpenumpang As String
	
	Private _poname As String
	
	Private _jenis As String
	
	Private _kelas As String
	
	Private _jumlah As String
	
	Private _idtrayek As String
	
	Private _tbcrew__s As EntitySet(Of tbcrew__)
	
	Private _tbpenumpangs As EntitySet(Of tbpenumpang)
	
	Private _tbpos As EntitySet(Of tbpo)
	
	Private _tbtrayeks As EntitySet(Of tbtrayek)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OncrewidChanging(value As String)
    End Sub
    Partial Private Sub OncrewidChanged()
    End Sub
    Partial Private Sub OnbusidChanging(value As String)
    End Sub
    Partial Private Sub OnbusidChanged()
    End Sub
    Partial Private Sub OnpoidChanging(value As String)
    End Sub
    Partial Private Sub OnpoidChanged()
    End Sub
    Partial Private Sub OnidpenumpangChanging(value As String)
    End Sub
    Partial Private Sub OnidpenumpangChanged()
    End Sub
    Partial Private Sub OnponameChanging(value As String)
    End Sub
    Partial Private Sub OnponameChanged()
    End Sub
    Partial Private Sub OnjenisChanging(value As String)
    End Sub
    Partial Private Sub OnjenisChanged()
    End Sub
    Partial Private Sub OnkelasChanging(value As String)
    End Sub
    Partial Private Sub OnkelasChanged()
    End Sub
    Partial Private Sub OnjumlahChanging(value As String)
    End Sub
    Partial Private Sub OnjumlahChanged()
    End Sub
    Partial Private Sub OnidtrayekChanging(value As String)
    End Sub
    Partial Private Sub OnidtrayekChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tbcrew__s = New EntitySet(Of tbcrew__)(AddressOf Me.attach_tbcrew__s, AddressOf Me.detach_tbcrew__s)
		Me._tbpenumpangs = New EntitySet(Of tbpenumpang)(AddressOf Me.attach_tbpenumpangs, AddressOf Me.detach_tbpenumpangs)
		Me._tbpos = New EntitySet(Of tbpo)(AddressOf Me.attach_tbpos, AddressOf Me.detach_tbpos)
		Me._tbtrayeks = New EntitySet(Of tbtrayek)(AddressOf Me.attach_tbtrayeks, AddressOf Me.detach_tbtrayeks)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crewid", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property crewid() As String
		Get
			Return Me._crewid
		End Get
		Set
			If (String.Equals(Me._crewid, value) = false) Then
				Me.OncrewidChanging(value)
				Me.SendPropertyChanging
				Me._crewid = value
				Me.SendPropertyChanged("crewid")
				Me.OncrewidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_busid", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property busid() As String
		Get
			Return Me._busid
		End Get
		Set
			If (String.Equals(Me._busid, value) = false) Then
				Me.OnbusidChanging(value)
				Me.SendPropertyChanging
				Me._busid = value
				Me.SendPropertyChanged("busid")
				Me.OnbusidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_poid", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property poid() As String
		Get
			Return Me._poid
		End Get
		Set
			If (String.Equals(Me._poid, value) = false) Then
				Me.OnpoidChanging(value)
				Me.SendPropertyChanging
				Me._poid = value
				Me.SendPropertyChanged("poid")
				Me.OnpoidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idpenumpang", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property idpenumpang() As String
		Get
			Return Me._idpenumpang
		End Get
		Set
			If (String.Equals(Me._idpenumpang, value) = false) Then
				Me.OnidpenumpangChanging(value)
				Me.SendPropertyChanging
				Me._idpenumpang = value
				Me.SendPropertyChanged("idpenumpang")
				Me.OnidpenumpangChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_poname", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property poname() As String
		Get
			Return Me._poname
		End Get
		Set
			If (String.Equals(Me._poname, value) = false) Then
				Me.OnponameChanging(value)
				Me.SendPropertyChanging
				Me._poname = value
				Me.SendPropertyChanged("poname")
				Me.OnponameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jenis", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property jenis() As String
		Get
			Return Me._jenis
		End Get
		Set
			If (String.Equals(Me._jenis, value) = false) Then
				Me.OnjenisChanging(value)
				Me.SendPropertyChanging
				Me._jenis = value
				Me.SendPropertyChanged("jenis")
				Me.OnjenisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_kelas", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property kelas() As String
		Get
			Return Me._kelas
		End Get
		Set
			If (String.Equals(Me._kelas, value) = false) Then
				Me.OnkelasChanging(value)
				Me.SendPropertyChanging
				Me._kelas = value
				Me.SendPropertyChanged("kelas")
				Me.OnkelasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jumlah", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property jumlah() As String
		Get
			Return Me._jumlah
		End Get
		Set
			If (String.Equals(Me._jumlah, value) = false) Then
				Me.OnjumlahChanging(value)
				Me.SendPropertyChanging
				Me._jumlah = value
				Me.SendPropertyChanged("jumlah")
				Me.OnjumlahChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idtrayek", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property idtrayek() As String
		Get
			Return Me._idtrayek
		End Get
		Set
			If (String.Equals(Me._idtrayek, value) = false) Then
				Me.OnidtrayekChanging(value)
				Me.SendPropertyChanging
				Me._idtrayek = value
				Me.SendPropertyChanged("idtrayek")
				Me.OnidtrayekChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tbarmada_tbcrew__", Storage:="_tbcrew__s", ThisKey:="crewid", OtherKey:="crewid")>  _
	Public Property tbcrew__s() As EntitySet(Of tbcrew__)
		Get
			Return Me._tbcrew__s
		End Get
		Set
			Me._tbcrew__s.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tbarmada_tbpenumpang", Storage:="_tbpenumpangs", ThisKey:="idpenumpang", OtherKey:="Idpenumpang")>  _
	Public Property tbpenumpangs() As EntitySet(Of tbpenumpang)
		Get
			Return Me._tbpenumpangs
		End Get
		Set
			Me._tbpenumpangs.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tbarmada_tbpo", Storage:="_tbpos", ThisKey:="poid", OtherKey:="poid")>  _
	Public Property tbpos() As EntitySet(Of tbpo)
		Get
			Return Me._tbpos
		End Get
		Set
			Me._tbpos.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tbarmada_tbtrayek", Storage:="_tbtrayeks", ThisKey:="idtrayek", OtherKey:="Idtrayek")>  _
	Public Property tbtrayeks() As EntitySet(Of tbtrayek)
		Get
			Return Me._tbtrayeks
		End Get
		Set
			Me._tbtrayeks.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tbcrew__s(ByVal entity As tbcrew__)
		Me.SendPropertyChanging
		entity.tbarmada = Me
	End Sub
	
	Private Sub detach_tbcrew__s(ByVal entity As tbcrew__)
		Me.SendPropertyChanging
		entity.tbarmada = Nothing
	End Sub
	
	Private Sub attach_tbpenumpangs(ByVal entity As tbpenumpang)
		Me.SendPropertyChanging
		entity.tbarmada = Me
	End Sub
	
	Private Sub detach_tbpenumpangs(ByVal entity As tbpenumpang)
		Me.SendPropertyChanging
		entity.tbarmada = Nothing
	End Sub
	
	Private Sub attach_tbpos(ByVal entity As tbpo)
		Me.SendPropertyChanging
		entity.tbarmada = Me
	End Sub
	
	Private Sub detach_tbpos(ByVal entity As tbpo)
		Me.SendPropertyChanging
		entity.tbarmada = Nothing
	End Sub
	
	Private Sub attach_tbtrayeks(ByVal entity As tbtrayek)
		Me.SendPropertyChanging
		entity.tbarmada = Me
	End Sub
	
	Private Sub detach_tbtrayeks(ByVal entity As tbtrayek)
		Me.SendPropertyChanging
		entity.tbarmada = Nothing
	End Sub
End Class
